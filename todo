#!/bin/bash

COMMAND=$1
TODO_FILE=~/.todo

RED='\\e[31m'
GREEN='\\e[32m'
RESET_COLOR='\\e[m'

# Because from inside a function, we can't refer to command line arguments,
# introduce ARGV array so that refer to command line arguments.
ARGV=("$@")

touch $TODO_FILE
show_help () {
cat<<EOF
Usage: todo COMMAND ARGUMENTS
    add     TODO:        Add a todo.
    check   NUMBER:      Mark a todo as done.
    uncheck NUMBER:      Mark a todo as undone.
    change  NUMBER TODO: Change a todo.
    delete  NUMBER:      Delete a todo.
    show:                Show todos.
    help:                Show this message.
EOF
}

show_help_if_argument_is_null () {
    # $1 is the number of needed arguments.
    for argument_index in `seq $1`
    do
        if [ "${ARGV[$argument_index]}" = "" ]; then
            show_help
            exit 1
        fi
    done
}

is_number () {
    if [[ ! $1 =~ ^[0-9]+$ ]]; then
        echo "Invalid number: $1"
        exit 1
    fi
}

case $COMMAND in
    "add" )
        show_help_if_argument_is_null 1
        echo "${ARGV[1]},0" >> $TODO_FILE ;;
    "check" )
        show_help_if_argument_is_null 1
        is_number ${ARGV[1]}
        sed "${ARGV[1]}"'s/\(\w\+\),0/\1,1/' -i $TODO_FILE ;;
    "uncheck" )
        show_help_if_argument_is_null 1
        is_number ${ARGV[1]}
        sed "${ARGV[1]}"'s/\(\w\+\),1/\1,0/' -i $TODO_FILE ;;
    "change" )
        show_help_if_argument_is_null 2
        is_number ${ARGV[1]}
        sed "${ARGV[1]}"'s/.\+,\([01]\)/'"${ARGV[2]}"',\1/' -i $TODO_FILE ;;
    "delete" )
        show_help_if_argument_is_null 1
        is_number ${ARGV[1]}
        sed "${ARGV[1]}"'d' -i $TODO_FILE ;;
    "show" )
        digit_number=$(echo $(wc -l $TODO_FILE|awk '{print $1}')/10+1|bc)
        line_index=1
        while IFS=: read -r line
        do
            printf "%${digit_number}d" $line_index
            echo -e "$(echo $line|sed "s/\(.\+\),0/$RED□ \1$RESET_COLOR/"|sed "s/\(.\+\),1/$GREEN✓ \1$RESET_COLOR/")"
            ((line_index++))
        done <"$TODO_FILE" ;;
    "help" )
        show_help ;;
    * )
        show_help
        exit 1 ;;
esac
